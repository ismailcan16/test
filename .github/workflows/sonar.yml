name: SonarQube Analysis

on:
  push:
    branches:
      - main
      - '**' # Tüm branch'lerdeki push işlemlerini tetikler
  pull_request:
    branches:
      - main
      - '**' # Tüm branch'ler için PR oluşturulduğunda tetikledflflgfr

jobs:
  sonarQube:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '8'

    - name: Cache SonarQube dependencies
      uses: actions/cache@v2
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar-cache
        restore-keys: ${{ runner.os }}-sonar-cache

    - name: Install SonarQube Scanner
      run: |
        wget -O sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
        unzip sonar-scanner.zip
        mv sonar-scanner-4.6.2.2472-linux sonar-scanner
        export PATH=$PATH:$(pwd)/sonar-scanner/bin

    - name: Run SonarQube scanner
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        sonar-scanner \
          -Dsonar.projectKey=my_project_key \
          -Dsonar.sources=. \
          -Dsonar.host.url=http://your_sonarqube_server_url \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
