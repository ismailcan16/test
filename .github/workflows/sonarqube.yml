name: SonarQube Analysis

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  schedule:
    - cron: '0 0 * * *'

jobs:
  sonarqube-analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run SonarQube Scan
        if: github.event_name == 'pull_request'
        run: |
          docker run --rm \
            -e SONAR_TOKEN=${{ secrets.SONAR_TOKEN }} \
            -e SONAR_HOST_URL=${{ secrets.SONAR_HOST_URL }} \
            -e GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} \
            -e SONARQUBE_SCANNER_PARAMS="-Dsonar.pullrequest.key=${{ github.event.pull_request.number }} -Dsonar.pullrequest.branch=${{ github.head_ref }} -Dsonar.pullrequest.base=${{ github.base_ref }}" \
            mc1arke/sonarqube-with-community-branch-plugin:latest

      - name: Run SonarQube Scan for Branches
        if: github.event_name != 'pull_request'
        run: |
          docker run --rm \
            -e SONAR_TOKEN=${{ secrets.SONAR_TOKEN }} \
            -e SONAR_HOST_URL=${{ secrets.SONAR_HOST_URL }} \
            -e SONARQUBE_SCANNER_PARAMS="-Dsonar.projectKey=your_project_key -Dsonar.sources=. -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} -Dsonar.login=${{ secrets.SONAR_TOKEN }}" \
            mc1arke/sonarqube-with-community-branch-plugin:latest
